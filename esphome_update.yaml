automation:
  - alias: "Controlla e aggiorna ESPHome ogni giorno"
    trigger:
      - platform: time
        at: "01:00:00"
    action:
      - service: script.aggiorna_dispositivi_esphome  # Corretto il nome del servizio

script:
  aggiorna_dispositivi_esphome:
    alias: "üîÑ Aggiorna dispositivi ESPHome"
    mode: single
    sequence:
      - alias: "üìã Prepara liste per i risultati"
        variables:
          aggiornati_temp: []
          falliti_temp: []

      - alias: "üìã Crea lista dispositivi aggiornabili"
        variables:
          dispositivi_esphome: >
            {{ states.update
                | selectattr('state', 'eq', 'on')
                | selectattr('entity_id', 'in', integration_entities('esphome'))
                | map(attribute='entity_id')
                | list }}
          
          # Verifica se l'addon ESPHome ha un aggiornamento disponibile
          # Sostituisci con l'entity_id corretto per la tua installazione
          esphome_addon_entity_id: "update.esphome"
          esphome_addon: >
            {% if states(esphome_addon_entity_id) == 'on' %}
              [ '{{ esphome_addon_entity_id }}' ]
            {% else %}
              []
            {% endif %}
          
          entita_da_aggiornare: "{{ dispositivi_esphome + esphome_addon }}"

      - alias: "üîÅ Esegui aggiornamenti in sequenza"
        repeat:
          for_each: "{{ entita_da_aggiornare }}"
          sequence:
            - variables:
                dispositivo_corrente: "{{ repeat.item }}"
                nome_dispositivo: "{{ state_attr(repeat.item, 'friendly_name') or repeat.item }}"
            
            - service: update.install
              target:
                entity_id: "{{ dispositivo_corrente }}"
              data: {}
              continue_on_error: true
            
            - wait_template: "{{ is_state(dispositivo_corrente, 'off') }}"
              timeout: "00:03:00"
              continue_on_timeout: true
            
            - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ is_state(dispositivo_corrente, 'off') }}"
                  sequence:
                    - variables:
                        aggiornati_temp: "{{ aggiornati_temp + [nome_dispositivo] }}"
              default:
                - variables:
                    falliti_temp: "{{ falliti_temp + [nome_dispositivo] }}"
            
            - delay: "00:00:05"
      
      - alias: "üì± Invia notifica finale"
        # Sostituisci con il tuo servizio di notifica reale
        service: notify.my_phone
        data:
          title: "üîÑ Aggiornamento ESPHome"
          message: >
            {% if aggiornati_temp or falliti_temp %}
              {% if aggiornati_temp %}
                ‚úÖ Aggiornati con successo:
                {{ aggiornati_temp | join('\n') }}
              {% endif %}
              {% if falliti_temp %}
                
                ‚ùå Falliti:
                {{ falliti_temp | join('\n') }}
              {% endif %}
            {% else %}
              ‚ÑπÔ∏è Nessun aggiornamento disponibile.
            {% endif %}
